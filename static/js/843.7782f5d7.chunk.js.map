{"version":3,"file":"static/js/843.7782f5d7.chunk.js","mappings":"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","sources":["components/ContactsAddForm/ContactsAddForm.styled.jsx","components/ContactsAddForm/ContactsAddForm.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","redux/contacts/contacts.selectors.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","pages/contacts/Contacts.styled.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["\nimport styled from '@emotion/styled'\n\nexport const Form = styled.form`\ndisplay: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 400px;\n  padding: 10px;\n  gap: 20px;\n  border: 1px solid black;\n  \n`\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  font-size: 20px;\n`\n\nexport const ButtonAddContact = styled.button`\nwidth: 120px;\n  font-size: 15px;\n  border-radius: 5px;\n`","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addContact } from 'redux/contacts/contacts.thunk';\nimport { Form, Label, ButtonAddContact } from './ContactsAddForm.styled'\n\n\n\nexport function ContactsAddForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector((state) => state.contacts.contacts)\n\n\n    const onAddNewContact = event => {\n        event.preventDefault()\n        const newContact = {\n\n            name,\n            number,\n        };\n        const contactInList = contacts.map(contact => (\n            contact.name\n        ))\n        if (contactInList.includes(newContact.name)) {\n            alert(`${newContact.name} is already in contacts `)\n        } else {\n            dispatch(addContact(newContact));\n        }\n        reset();\n    };\n\n    const reset = () => {\n        setName('')\n        setNumber('')\n    }\n\n    return (\n        <Form onSubmit={onAddNewContact}>\n            <Label>Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(event) => setName(event.currentTarget.value)}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required />\n            </Label>\n            <Label>Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={(event) => setNumber(event.currentTarget.value)}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required />\n            </Label>\n            <ButtonAddContact type='submit'>Add contact</ButtonAddContact>\n        </Form>\n    )\n}\n","\nimport styled from '@emotion/styled'\n\nexport const FilterLabel = styled.label`\ndisplay: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  margin-bottom: 30px;\n  font-size: 20px;\n  font-weight: 500;\n` ","import { useDispatch } from 'react-redux'\nimport { setQuery } from '../../redux/contacts/contacts.slice'\n\nimport { FilterLabel } from './ContactsFilter.styled'\n\nexport const ContactsFilter = () => {\n    const dispatch = useDispatch()\n\n    const onFilterChange = query => {\n        dispatch(setQuery(query))\n    }\n\n    return (\n        <FilterLabel>Find contacts by name\n            <input\n                type=\"text\"\n                onChange={(event) => onFilterChange(event.currentTarget.value)}\n            />\n        </FilterLabel>\n    )\n}\n","export const selectFilteredContacts = (state) => {\n    return state.contacts.contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(state.contacts.query.toLowerCase()))\n}","import styled from \"styled-components\";\n\nexport const LoaderWrapper = styled.div`\ndisplay: flex;\njustify-content: center;\n`","import React from \"react\";\nimport { MagnifyingGlass } from 'react-loader-spinner'\nimport { LoaderWrapper } from './Loader.styled'\n\nexport const Loader = () => {\n    return (\n        <LoaderWrapper>\n            <MagnifyingGlass\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"MagnifyingGlass-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"MagnifyingGlass-wrapper\"\n                glassColor='#c0efff'\n                color='#e15b64'\n            /></LoaderWrapper>\n\n    )\n}","import styled from '@emotion/styled'\n\nexport const ContsctList = styled.ul`\n  padding-left: 0;\n  margin-top: 0;\n`\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`\n\nexport const ContactItemInfo = styled.p`\n  font-size: 20px;\n  margin: 0;\n`\n\nexport const ContactItemButton = styled.button`\n  width: 100px;\n  font-size: 15px;\n  border-radius: 5px;\n`","\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { STATUS } from 'redux/contacts/contacts.status'\nimport { deleteContact, fetchContacts } from 'redux/contacts/contacts.thunk'\nimport { selectFilteredContacts } from 'redux/contacts/contacts.selectors'\nimport { Loader } from 'components/Loader/Loader'\n\nimport { ContsctList, ContactItem, ContactItemInfo, ContactItemButton } from './ContactsList.styled'\n\nexport const ContactsList = () => {\n    const filteredContacts = useSelector(selectFilteredContacts)\n    const dispatch = useDispatch()\n    const { status } = useSelector(state => state.contacts)\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n    const onDeleteContact = id => {\n        dispatch(deleteContact(id))\n    }\n\n    return (\n        <ContsctList>\n            {(status === STATUS.idle || status === STATUS.loading) && <Loader />}\n            {status === STATUS.error && <p>Вибачте, сталася помилка</p>}\n            {filteredContacts?.map(({ id, name, number, }) => (\n                <ContactItem key={id}>\n                    <ContactItemInfo>{name}: {number}</ContactItemInfo>\n                    <ContactItemButton onClick={() => onDeleteContact(id)}>Delete</ContactItemButton>\n                </ContactItem>\n            ))}\n        </ContsctList>\n    )\n}","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding-top: 50px;\n    padding-bottom: 50px;\n    font-size: 30px;\n    color: #010101;\n    background-color: rgba(237, 233, 233, 0.5);\n`;\n\nexport const PhonebookHeading = styled.h1`\nmargin-top: 0;\nmargin-bottom: 30px;\n`\n\nexport const ContactsHeading = styled.h2`\nmargin-top: 30px;\nmargin-bottom: 30px;\nfont-size: 30px;\n`","import { ContactsAddForm } from 'components/ContactsAddForm/ContactsAddForm';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsHeading, Container, PhonebookHeading } from \"./Contacts.styled\"\n\nconst Contacts = () => {\n    return (\n        <Container>\n            <PhonebookHeading>Phonebook</PhonebookHeading>\n            <ContactsAddForm />\n            <ContactsHeading>Contacs</ContactsHeading>\n            <ContactsFilter />\n            <ContactsList />\n        </Container>\n    )\n}\n\nexport default Contacts"],"names":["Form","styled","Label","ButtonAddContact","ContactsAddForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","reset","onSubmit","event","preventDefault","newContact","map","contact","includes","alert","addContact","type","value","onChange","currentTarget","pattern","title","required","FilterLabel","ContactsFilter","query","setQuery","selectFilteredContacts","filter","toLowerCase","LoaderWrapper","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","ContsctList","ContactItem","ContactItemInfo","ContactItemButton","ContactsList","filteredContacts","status","useEffect","fetchContacts","STATUS","id","onClick","deleteContact","onDeleteContact","Container","PhonebookHeading","ContactsHeading"],"sourceRoot":""}